openapi: 3.0.0
info:
  title: "Authentication API"
  description: "API endpoints for user authentication"
  version: "1.0.0"
servers:
  - url: "http://localhost:8000/api"
components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
security:
  - bearerAuth: []

paths:
  /docs:
    get:
      tags:
        - "Documentation"
      summary: "Get API documentation"
      responses:
        "200":
          description: "API documentation retrieved successfully"
  /auth/register:
    post:
      tags:
        - "Authentication"
      summary: "Registers a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "User's email"
                password:
                  type: string
                  format: password
                  description: "User's password"
                userName:
                  type: string
                  description: "User's username"
      responses:
        "200":
          description: "User registered successfully"
        "400":
          description: "Bad request - Missing or invalid parameters"
        "409":
          description: "Conflict - User already exists"
  /auth/login:
    post:
      tags:
        - "Authentication"
      summary: "Logs in a user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "User's email"
                password:
                  type: string
                  format: password
                  description: "User's password"
      responses:
        "200":
          description: "User logged in successfully"
        "401":
          description: "Unauthorized - Invalid credentials"
  /auth/refresh-token:
    post:
      tags:
        - "Authentication"
      summary: "Refreshes user's authentication token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: "Refresh token"
      responses:
        "200":
          description: "Token refreshed successfully"
        "401":
          description: "Unauthorized - Invalid or expired token"
  /auth/logout:
    delete:
      tags:
        - "Authentication"
      summary: "Logs out a user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: "Refresh token"
      responses:
        "204":
          description: "User logged out successfully"
        "401":
          description: "Unauthorized - Invalid or expired token"
